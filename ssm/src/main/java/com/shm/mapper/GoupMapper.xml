<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shm.mapper.GoupMapper">
	<resultMap id="map" type="Studentt">
		<id column="id" property="id"></id>
		<result column="name" property="name"></result>
		<result column="phone" property="phone"></result>
		<collection property="utypelist" ofType="Utype">
		<id column="tid" property="tid"></id>
		<result column="tname" property="tname"></result>
		</collection>
	</resultMap>
	<select id="getList" resultMap="map">
		SELECT s.*,t.*
FROM studentt s
LEFT JOIN s_u u on s.id=u.id
LEFT JOIN utype t on u.tid=t.tid
	</select>


	<!--<select id="getlist" resultType="www.bw.com.domain.User">

		select u.*, GROUP_CONCAT(t.tname)tnames , GROUP_CONCAT(t.tid)tids from user
		u LEFT JOIN umiddle m on u.id=m.id LEFT JOIN utype t on t.tid=m.tid  where  name like '%${mohu}%'
		GROUP BY u.id  limit
		#{a.startIndex},#{a.pageSize}
	</select>

<select id="count" resultType="integer">
		select count(*) from user
	</select>

	<select id="cha" resultType="www.bw.com.domain.User">

		select u.*, GROUP_CONCAT(t.tname)tnames , GROUP_CONCAT(t.tid)tids from user
		u LEFT JOIN umiddle m on u.id=m.id LEFT JOIN utype t on t.tid=m.tid
		where u.id=#{id} GROUP BY u.id
	</select>

	<select id="TypeList" resultType="www.bw.com.domain.Utype">
		select * from utype
	</select>


	<insert id="adduser" useGeneratedKeys="true" keyProperty="id">
		insert
		into user (name , phone) values(#{name} ,#{phone})
	</insert>


	<insert id="addmiddle">
		insert into umiddle (id,tid) values
		<foreach collection="tids" item="tid" separator=",">
			(#{id},#{tid})
		</foreach>
	</insert>

	<delete id="delzhu">
		delete from user where id=#{id}
	</delete>



	<delete id="delmiddle">
		delete from umiddle where id=#{id}
	</delete>


	<update id="updateuser">
		update user set name=#{name} , phone=#{phone} where id=#{id}
	</update>

	<insert id="updatemiddle">
		insert into umiddle (id,tid) values
		<foreach collection="tids" item="tid" separator=",">
			(#{id},#{tid})
		</foreach>
	</insert>




-->
</mapper>
